/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 12 23:11:26 GMT 2024
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.Collector;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Collector_ESTest extends Collector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(";}ARCZ!lX", ";}ARCZ!lX");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf(";}ARCZ!lX", ";}ARCZ!lX", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$IndexEvaluator", attributes0);
      Element element0 = Collector.findFirst(evaluator_AttributeWithValue0, formElement0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText("{yeekYY7+/}Ov?|(=W");
      Tag tag0 = Tag.valueOf("{yeekYY7+/}Ov?|(=W");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "1[gQ}P57*P=", attributes0);
      Elements elements0 = Collector.collect(evaluator_ContainsWholeText0, pseudoTextElement0);
      assertTrue(elements0.isEmpty());
  }
}
