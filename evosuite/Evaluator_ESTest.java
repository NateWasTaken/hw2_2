/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 12 23:08:38 GMT 2024
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("qX1NX", "wa\"CT\"snvMNu5`");
      boolean boolean0 = evaluator_MatchText0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.CDataNode");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "gsjI6?sJ9nW", attributes0);
      boolean boolean0 = evaluator_MatchText0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Document document0 = Document.createShell(":matches(Fz}Em)");
      document0.prependText("t(:1yZPjG");
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Document document0 = Document.createShell(":matches(Fz}Em)");
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("NkyYcE9~f", "{(kYR?4+Vd");
      Document document1 = document0.shallowClone();
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = new Document("s40{I0$}#vSTuO", "s40{I0$}#vSTuO");
      Document document1 = Parser.parseBodyFragment("h", ":only-of-type");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Element element0 = document1.body();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = new Document("BKlk?c\"iSx,]QY{", "BKlk?c\"iSx,]QY{");
      document0.prependChild(document0);
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@k'r[aJWrw9R", attributes0);
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Document document0 = Parser.parse("+qi1Vv#v1?#", "+qi1Vv#v1?#");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = new Document("BKlk?c\"iSx,]QY{", "BKlk?c\"iSx,]QY{");
      Element element0 = document0.body();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = new Document("BKlk?c\"iSx,]QY{", "BKlk?c\"iSx,]QY{");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = Document.createShell("FiY^On+$`Vk]k6?6I ");
      boolean boolean0 = evaluator_IsRoot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      boolean boolean0 = evaluator_IsRoot0.matches((Element) null, (Element) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Parser.parse("tYv&%^o8;U?{OMr,E]D", "F");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsFirstChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstChild0);
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("http://www.w3.org/2000/svg", "http://www.w3.org/1998/Math/MathML");
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = new Document(":is(:first-child)");
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = new Document("s40{I0$}#vSTuO", "s40{I0$}#vSTuO");
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      int int0 = evaluator_IsLastOfType0.calculatePosition(document0, document0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Document document0 = Document.createShell("60F:e1#X");
      int int0 = evaluator_IsFirstOfType0.calculatePosition(document0, document0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-632), (-1787));
      Document document0 = new Document("s40{I0$}#vSTuO", "s40{I0$}#vSTuO");
      int int0 = evaluator_IsNthLastChild0.calculatePosition(document0, document0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-3874), 0);
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(-3874n)", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 1622);
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsNthChild0);
      String string0 = structuralEvaluator_Parent0.toString();
      assertEquals(":nth-child(1622) ", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-322), 5);
      Document document0 = Document.createShell(":containsOwn(%s)");
      Element element0 = document0.head();
      boolean boolean0 = evaluator_IsNthLastChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Document.createShell(":matches(Fz}Em)");
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(8, 191);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Document document0 = Document.createShell("60F:e1#X");
      Elements elements0 = document0.select((Evaluator) evaluator_IsFirstOfType0);
      assertEquals(2, elements0.size());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsNthOfType");
      Elements elements0 = document0.select((Evaluator) evaluator_IsLastChild0);
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = new Document("P2/:*6'19*<\u0006MMp}4_", "QB:k:pU<6G");
      Elements elements0 = document0.getElementsByIndexEquals(0);
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(1505);
      Document document0 = Parser.parseBodyFragment(",", ",");
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-38420141));
      Tag tag0 = Tag.valueOf(":only-child");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "e", attributes0);
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(0);
      Document document0 = new Document("BKlk?c\"iSx,]QY{", "zooxC..");
      StructuralEvaluator.ImmediateParentRun structuralEvaluator_ImmediateParentRun0 = new StructuralEvaluator.ImmediateParentRun(evaluator_IndexLessThan0);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"\":matchText", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":first-of-type", attributes0);
      boolean boolean0 = structuralEvaluator_ImmediateParentRun0.matches(document0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("NkyYcE9~f", "{(kYR?4+Vd");
      Document document1 = document0.shallowClone();
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(3023);
      boolean boolean0 = evaluator_IndexLessThan0.matches(document1, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(5312);
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@8'raJWwR", attributes0);
      boolean boolean0 = evaluator_IndexLessThan0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = null;
      try {
        evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("s40{I0$}#vSTuO", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("Im!<NJ?]Cad,unuIv", "\"nj1{iH");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("'H;jCE=fE5pV4An7'", "'H;jCE=fE5pV4An7'");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@k'r[aJWrw9R", attributes0);
      Attribute attribute0 = new Attribute("';<3_0smt", "\"Z5w-8f-jdC9mb");
      attributes0.put(attribute0);
      Pattern pattern0 = Pattern.compile("\"Z5w-8f-jdC9mb", (-3971));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("';<3_0smt", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@8'raJWwR", attributes0);
      Attribute attribute0 = new Attribute("org.jsoup.select.Evaluator$ContainsWholeText", "org.jsoup.select.Evaluator$ContainsWholeText");
      attributes0.put(attribute0);
      Pattern pattern0 = Pattern.compile(">L,_THm", (-3971));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("org.jsoup.select.Evaluator$ContainsWholeText", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@8'raJWwR", attributes0);
      Pattern pattern0 = Pattern.compile(">L,_THm", (-3971));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching(":lt(5312)", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("%22", "Pattern syntax error: ");
      Tag tag0 = Tag.valueOf("'h");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("%22", "Pattern syntax error: ");
      FormElement formElement0 = new FormElement(tag0, "'h", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(formElement0, formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("%22", "Pattern syntax error: ");
      Tag tag0 = Tag.valueOf("'h");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("%22", "@1to]\"Wli");
      FormElement formElement0 = new FormElement(tag0, "'h", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@8'raJWwR", attributes0);
      Attribute attribute0 = new Attribute("';<3_0smt", "';<3_0smt");
      attributes0.put(attribute0);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("';<3_0smt", "!rP5tPK");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("NkyYcE9~f", "{(kYR?4+Vd");
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(":matchText", ":matchText");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("@8'raJWwR", "@8'raJWwR");
      Element element0 = new Element(tag0, "@8'raJWwR", attributes1);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("@8'raJWwR", "@8'raJWwR");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("@8'raJWwR", "';<3_0smt");
      Element element0 = new Element(tag0, "@8'raJWwR", attributes1);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("@8'raJWwR", "@8'raJWwR");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@k'r[aJWrw9R", attributes0);
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("H;jCE=fE5pV4An7", "H;jCE=fE5pV4An7");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@8'raJWwR", attributes0);
      Attribute attribute0 = new Attribute("';<3_0smt", "';<3_0smt");
      attributes0.put(attribute0);
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("';<3_0smt", "';<3_0smt");
      boolean boolean0 = evaluator_AttributeWithValueNot0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("NkyYcE9~f", "{(kYR?4+Vd");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("nth-child", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("[:matchtext$=:matchtext]", "{(kYR?4+Vd");
      Element element0 = new Element(tag0, "'Fz}Em", attributes1);
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("[:matchtext$=:matchtext]", "'Fz}Em");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "{kYR4+Vd");
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("nth-child", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.add("[:matchtext$=:matchtext]", "{kYR4+Vd");
      Element element0 = new Element(tag0, "Im!<NJ?]Cad,unuIv", attributes0);
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("[:matchtext$=:matchtext]", "{kYR4+Vd");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(1135, 1135);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("nth-last-of-type", "nth-last-of-type");
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("[nth-last-of-type^=nth-last-of-type]");
      Document document0 = Document.createShell("");
      Evaluator[] evaluatorArray0 = new Evaluator[7];
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("v@N:5O,Ww1Y))nb?||", "v@N:5O,Ww1Y))nb?||");
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeWithValue0;
      evaluatorArray0[1] = (Evaluator) evaluator_IsLastOfType0;
      evaluatorArray0[2] = (Evaluator) evaluator_AttributeWithValueStarting0;
      evaluatorArray0[3] = (Evaluator) evaluator_IsLastOfType0;
      evaluatorArray0[4] = (Evaluator) evaluator_IsNthLastOfType0;
      evaluatorArray0[5] = (Evaluator) evaluator_ContainsData0;
      evaluatorArray0[6] = (Evaluator) evaluator_ContainsData0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      boolean boolean0 = combiningEvaluator_Or0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("J]_J(Jpl_-3h.o[]");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("!LS.Pl#DT(FJ,RI9=L~", "!LS.Pl#DT(FJ,RI9=L~", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("<;Nt{");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "<;Nt{", attributes0);
      boolean boolean0 = evaluator_AttributeStarting0.matches(pseudoTextElement0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add("@k'r[aJWrw9R", "';<3_0smt");
      Element element0 = new Element(tag0, "@k'r[aJWrw9R", attributes1);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("@k'r[aJWrw9R");
      boolean boolean0 = evaluator_AttributeStarting0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      int int0 = evaluator_AllElements0.cost();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = new Document(":first-child", "org.jsoup.select.Evaluator$IsOnlyChild");
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      boolean boolean0 = evaluator_AllElements0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      String string0 = evaluator_AllElements0.toString();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      String string0 = evaluator_IsFirstOfType0.toString();
      assertEquals(":first-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("OmP59[9d*{L", "org.jsoup.select.Evaluator$MatchesOwn");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValueContaining0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals("[omp59[9d*{l*=org.jsoup.select.evaluator$matchesown] ~ ", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("OmP59[9d*{L", "org.jsoup.select.Evaluator$MatchesOwn");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValueContaining0);
      StructuralEvaluator.ImmediateParentRun structuralEvaluator_ImmediateParentRun0 = new StructuralEvaluator.ImmediateParentRun(structuralEvaluator_PreviousSibling0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("'b;jCE=fE\"p4An7", "'b;jCE=fE\"p4An7");
      Elements elements0 = document0.getElementsByAttributeValueContaining("'b;jCE=fE\"p4An7", "h");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("M`0ue-&3=DZ\"qtK]", "M`0ue-&3=DZ\"qtK]");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("html > body", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("annotation-xml");
      String string0 = evaluator_Tag0.toString();
      assertEquals("annotation-xml", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText(":matchesOwn(%s)");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn(:matchesown(%s))", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Document.createShell("FiY^On+$`Vk]k6?6I ");
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("[fiy^on+$`vk]k6?6i$=fiy^on+$`vk]k6?6i]");
      boolean boolean0 = evaluator_ContainsOwnText0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("");
      StructuralEvaluator.Is structuralEvaluator_Is0 = new StructuralEvaluator.Is(evaluator_AttributeStarting0);
      String string0 = structuralEvaluator_Is0.toString();
      assertEquals(":is([^])", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("nth-last-of-type");
      int int0 = evaluator_AttributeStarting0.cost();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      String string0 = evaluator_IsFirstChild0.toString();
      assertEquals(":first-child", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute(". Status=");
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_Attribute0);
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_Parent0);
      int int0 = structuralEvaluator_Not0.cost();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("");
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsNthOfType");
      Elements elements0 = document0.getElementsByAttribute("6s3@-\">RvsnW+Z");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("d>rC]i)B");
      String string0 = evaluator_TagEndsWith0.toString();
      assertEquals("d>rC]i)B", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("d>rC]i)B");
      Document document0 = Parser.parse("d>rC]i)B", "d>rC]i)B");
      boolean boolean0 = evaluator_TagEndsWith0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      String string0 = evaluator_IsLastOfType0.toString();
      assertEquals(":last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("nth-child", 7);
      Evaluator.MatchesWholeOwnText evaluator_MatchesWholeOwnText0 = new Evaluator.MatchesWholeOwnText(pattern0);
      String string0 = evaluator_MatchesWholeOwnText0.toString();
      assertEquals(":matchesWholeOwnText(nth-child)", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      Evaluator.MatchesWholeOwnText evaluator_MatchesWholeOwnText0 = new Evaluator.MatchesWholeOwnText(pattern0);
      int int0 = evaluator_MatchesWholeOwnText0.cost();
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Document.createShell("");
      Evaluator.MatchesWholeOwnText evaluator_MatchesWholeOwnText0 = new Evaluator.MatchesWholeOwnText((Pattern) null);
      // Undeclared exception!
      try { 
        evaluator_MatchesWholeOwnText0.matches(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesWholeOwnText", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(1135, 1135);
      String string0 = evaluator_IsNthLastOfType0.getPseudoClass();
      assertEquals("nth-last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText("9x/:a<(&OC4_");
      // Undeclared exception!
      try { 
        evaluator_ContainsWholeOwnText0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$ContainsWholeOwnText", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText("");
      String string0 = evaluator_ContainsWholeOwnText0.toString();
      assertEquals(":containsWholeOwnText()", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("J3jyK@^7#y_]Eb+z");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      String string0 = evaluator_MatchesOwn0.toString();
      assertEquals(":matchesOwn(J3jyK@^7#y_]Eb+z)", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      int int0 = evaluator_MatchesOwn0.cost();
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Document.createShell("FiY^On+$`Vk]k6?6I ");
      Pattern pattern0 = Pattern.compile("[fiy^on+$`vk]k6?6i$=fiy^on+$`vk]k6?6i]");
      Elements elements0 = document0.getElementsMatchingOwnText(pattern0);
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-322), 5);
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(-322n+5)", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      String string0 = evaluator_IsLastChild0.toString();
      assertEquals(":last-child", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(6);
      String string0 = evaluator_IndexEquals0.toString();
      assertEquals(":eq(6)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class((String) null);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_Class0);
      int int0 = structuralEvaluator_PreviousSibling0.cost();
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IndexEquals@0000000001", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "i#%7x0bm,+'", (Attributes) null);
      Evaluator.Class evaluator_Class0 = new Evaluator.Class(":empty");
      boolean boolean0 = evaluator_Class0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("");
      String string0 = evaluator_Class0.toString();
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      String string0 = evaluator_Id0.toString();
      assertEquals("#", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      // Undeclared exception!
      try { 
        evaluator_Id0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Id", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id(");]L");
      int int0 = evaluator_Id0.cost();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData(")X@+");
      String string0 = evaluator_ContainsData0.toString();
      assertEquals(":containsData()x@+)", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(0, 0);
      String string0 = evaluator_IsNthOfType0.getPseudoClass();
      assertEquals("nth-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      String string0 = evaluator_IsRoot0.toString();
      assertEquals(":root", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      int int0 = evaluator_IsRoot0.cost();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "{kYR4+Vd");
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-240), (-240));
      int int0 = evaluator_IsNthChild0.calculatePosition(document0, document0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Tag tag0 = Tag.valueOf(":lt(5312)");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "@8'raJWwR", attributes0);
      Elements elements0 = element0.getElementsByIndexGreaterThan(5312);
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsOnlyChild0);
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_Has0);
      String string0 = structuralEvaluator_Parent0.toString();
      assertEquals(":has(:only-child) ", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("{");
      int int0 = evaluator_ContainsText0.cost();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IndexEquals@0000000001", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "i#%7x0bm,+'", (Attributes) null);
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("org.jsoup.nodes.Entities");
      boolean boolean0 = evaluator_ContainsText0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("Content-Encoding");
      String string0 = evaluator_ContainsText0.toString();
      assertEquals(":contains(content-encoding)", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(":matchText", ":matchText");
      StructuralEvaluator.ImmediateParentRun structuralEvaluator_ImmediateParentRun0 = new StructuralEvaluator.ImmediateParentRun(evaluator_AttributeWithValueEnding0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(":matchText", ":matchText");
      String string0 = evaluator_AttributeWithValueEnding0.toString();
      assertEquals("[:matchtext$=:matchtext]", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("Fz}Em");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      String string0 = evaluator_Matches0.toString();
      assertEquals(":matches(Fz}Em)", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Element element0 = new Element("M@%Ssiim:");
      Pattern pattern0 = Pattern.compile("'http://www.w3.org/XML/1998/namespace", (-732));
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      boolean boolean0 = evaluator_Matches0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("Fz}Em");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      int int0 = evaluator_Matches0.cost();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Pattern pattern0 = Pattern.compile(">L,_THm", (-3971));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("';<3_0smt", pattern0);
      String string0 = evaluator_AttributeWithValueMatching0.toString();
      assertEquals("[';<3_0smt~=>L,_THm]", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("data");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("keyval", pattern0);
      int int0 = evaluator_AttributeWithValueMatching0.cost();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText(":only-of-type");
      String string0 = evaluator_ContainsWholeText0.toString();
      assertEquals(":containsWholeText(:only-of-type)", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText("-j%BM`[B~-e3mGEq<X");
      int int0 = evaluator_ContainsWholeText0.cost();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText(":only-of-type");
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(":lt(4220)", " \"", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, ":matchesOwn(%s)", attributes0);
      boolean boolean0 = evaluator_ContainsWholeText0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("%s");
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_MatchesWholeText0);
      String string0 = structuralEvaluator_Not0.toString();
      assertEquals(":not(:matchesWholeText(%s))", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("%s");
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      Document document0 = Parser.parse("%s", "%s");
      evaluator_MatchesWholeText0.matches(document0, document0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("P2/:*6'19*<\u0006MMp}4_");
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      int int0 = evaluator_MatchesWholeText0.cost();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      String string0 = evaluator_IsEmpty0.toString();
      assertEquals(":empty", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      int int0 = evaluator_MatchText0.cost();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      String string0 = evaluator_MatchText0.toString();
      assertEquals(":matchText", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      String string0 = evaluator_IsOnlyOfType0.toString();
      assertEquals(":only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      String string0 = evaluator_IndexGreaterThan0.toString();
      assertEquals(":gt(0)", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("FiY^On+$`Vk]k6?6I ", "[fiy^on+$`vk]k6?6i$=fiy^on+$`vk]k6?6i]");
      int int0 = evaluator_AttributeWithValueNot0.cost();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("\"q&F3WSy)y%|K:gJ-IK!", "http://www.w3.org/XML/1998/namespace");
      String string0 = evaluator_AttributeWithValueNot0.toString();
      assertEquals("[\"q&f3wsy)y%|k:gj-ik!!=http://www.w3.org/xml/1998/namespace]", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("4}/cw&", "4}/cw&");
      String string0 = evaluator_AttributeWithValue0.toString();
      assertEquals("[4}/cw&=4}/cw&]", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("@F", ")X@+");
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_AttributeWithValueStarting0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals("[@f^=)x@+] + ", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(4220);
      String string0 = evaluator_IndexLessThan0.toString();
      assertEquals(":lt(4220)", string0);
  }
}
